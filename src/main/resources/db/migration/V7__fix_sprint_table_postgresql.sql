-- Fix Sprint Table for PostgreSQL Compatibility
-- This migration creates the sprints table with proper PostgreSQL syntax

-- Drop existing sprints table if it exists (in case it was created with MySQL syntax)
DROP TABLE IF EXISTS sprints CASCADE;

-- Create sprints table with PostgreSQL syntax
CREATE TABLE sprints (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    sprint_goal TEXT,
    start_date TIMESTAMP NOT NULL,
    end_date TIMESTAMP NOT NULL,
    status VARCHAR(20) NOT NULL DEFAULT 'UPCOMING' 
        CHECK (status IN ('UPCOMING', 'ACTIVE', 'COMPLETED', 'CANCELLED')),
    project_id BIGINT NOT NULL,
    created_by_id BIGINT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    CONSTRAINT fk_sprint_project FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE,
    CONSTRAINT fk_sprint_created_by FOREIGN KEY (created_by_id) REFERENCES users(id),
    CONSTRAINT chk_sprint_dates CHECK (start_date < end_date)
);

-- Create indexes for performance
CREATE INDEX idx_sprint_project_status ON sprints(project_id, status);
CREATE INDEX idx_sprint_dates ON sprints(start_date, end_date);
CREATE INDEX idx_sprint_status ON sprints(status);

-- Add sprint_id column to tasks table if it doesn't exist
DO $$ 
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='tasks' AND column_name='sprint_id') THEN
        ALTER TABLE tasks ADD COLUMN sprint_id BIGINT;
        ALTER TABLE tasks ADD CONSTRAINT fk_task_sprint FOREIGN KEY (sprint_id) REFERENCES sprints(id) ON DELETE SET NULL;
        CREATE INDEX idx_task_sprint ON tasks(sprint_id);
    END IF;
END $$;

-- Update task_history table to add sprint_id if not exists
DO $$ 
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name='task_history' AND column_name='sprint_id') THEN
        ALTER TABLE task_history ADD COLUMN sprint_id BIGINT;
        ALTER TABLE task_history ADD CONSTRAINT fk_task_history_sprint FOREIGN KEY (sprint_id) REFERENCES sprints(id) ON DELETE SET NULL;
        CREATE INDEX idx_task_history_sprint_id ON task_history(sprint_id);
    END IF;
END $$;