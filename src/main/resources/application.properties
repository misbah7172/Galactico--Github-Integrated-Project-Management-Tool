# Server
server.port=${SERVER_PORT:5000}
server.address=${SERVER_ADDRESS:localhost}
server.forward-headers-strategy=NATIVE
server.servlet.context-path=/

# Static resources and performance optimization
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.cache.cachecontrol.max-age=31536000
spring.web.resources.cache.cachecontrol.cache-public=true
spring.web.resources.cache.cachecontrol.must-revalidate=true
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/**
spring.web.resources.chain.strategy.fixed.enabled=true
spring.web.resources.chain.strategy.fixed.paths=/css/**,/js/**
spring.web.resources.chain.strategy.fixed.version=1.0.0

# Compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Application name
spring.application.name=Galactico

# Database configuration (using PostgreSQL with NeonDB)
spring.datasource.url=${DB_URL:jdbc:postgresql://ep-royal-dew-ad5ccvfm-pooler.c-2.us-east-1.aws.neon.tech:5432/neondb?sslmode=require}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${DB_USERNAME:neondb_owner}
spring.datasource.password=${DB_PASSWORD:npg_OimpNMHWXR39}

# Disable H2 console (not needed for MySQL)
# spring.h2.console.enabled=false

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.defer-datasource-initialization=false

# Disable schema.sql initialization to avoid conflicts
spring.sql.init.mode=never

# OAuth2 configuration for GitHub
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:test_client_id}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:test_client_secret}
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri=${OAUTH_REDIRECT_URI:http://localhost:5000/login/oauth2/code/github}

# OAuth2 configuration for VS Code Extension (separate registration)
spring.security.oauth2.client.registration.github-extension.client-id=${GITHUB_EXTENSION_CLIENT_ID:test_extension_client_id}
spring.security.oauth2.client.registration.github-extension.client-secret=${GITHUB_EXTENSION_CLIENT_SECRET:test_extension_client_secret}
spring.security.oauth2.client.registration.github-extension.scope=read:user,user:email
spring.security.oauth2.client.registration.github-extension.redirect-uri=${OAUTH_EXTENSION_REDIRECT_URI:vscode://publisher.autotrack}
spring.security.oauth2.client.registration.github-extension.provider=github

# Thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Logging
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
logging.level.com.autotrack=DEBUG

# Maximum file upload size
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Session
server.servlet.session.timeout=30m

# Email Configuration (disabled for demo - can be configured later)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Application URL for email links
app.base-url=${APP_BASE_URL:http://localhost:5000}

# GitHub API Configuration
github.api.base-url=${GITHUB_API_BASE_URL:https://api.github.com}

# Slack Integration
slack.webhook.url=${SLACK_WEBHOOK_URL:}

# Async configuration
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=100
